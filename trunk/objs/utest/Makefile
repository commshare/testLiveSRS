# user must run make the objs/utest dir
# at the same dir of Makefile.

# A sample Makefile for building Google Test and using it in user
# tests.  Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# Please tweak the following variable definitions as needed by your
# project, except GTEST_HEADERS, which you can use in your own targets
# but shouldn't modify.

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.
GTEST_DIR = ../../objs/gtest

# Where to find user code.
USER_DIR = .

# Flags passed to the preprocessor.
CPPFLAGS += -I$(GTEST_DIR)/include

# Flags passed to the C++ compiler.
CXXFLAGS += -g -Wall -Wextra -O0

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
TESTS = ../../objs/srs_utest

# All Google Test headers.  Usually you shouldn't change this
# definition.
GTEST_HEADERS = $(GTEST_DIR)/include/gtest/*.h \
                $(GTEST_DIR)/include/gtest/internal/*.h

# House-keeping build targets.

all : $(TESTS)

clean :
	rm -f $(TESTS) gtest.a gtest_main.a *.o

# Builds gtest.a and gtest_main.a.

# Usually you shouldn't tweak such internal variables, indicated by a
# trailing _.
GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)

# For simplicity and to avoid depending on Google Test's
# implementation details, the dependencies specified below are
# conservative and not optimized.  This is fine as Google Test
# compiles fast and for ordinary users its source rarely changes.
gtest-all.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest-all.cc

gtest_main.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest_main.cc

gtest.a : gtest-all.o
	$(AR) $(ARFLAGS) $@ $^

gtest_main.a : gtest-all.o gtest_main.o
	$(AR) $(ARFLAGS) $@ $^

# Builds a sample test.  A test should link with either gtest.a or
# gtest_main.a, depending on whether it defines its own main()
# function.

#####################################################################################
#####################################################################################
# SRS(Simple RTMP Server) utest section
#####################################################################################
#####################################################################################

# Includes, the include dir.
SRS_UTEST_INC = -I../../src/utest -I../../src/core -I../../src/kernel -I../../src/rtmp -I../../src/app -I../../objs -I../../objs/st -I../../objs/openssl/include 

# Depends, the depends objects
SRS_UTEST_DEPS = ../../objs/src/core/srs_core.o ../../objs/src/core/srs_core_autofree.o ../../objs/src/kernel/srs_kernel_error.o ../../objs/src/kernel/srs_kernel_log.o ../../objs/src/kernel/srs_kernel_stream.o ../../objs/src/kernel/srs_kernel_buffer.o ../../objs/src/kernel/srs_kernel_utility.o ../../objs/src/kernel/srs_kernel_flv.o ../../objs/src/kernel/srs_kernel_codec.o ../../objs/src/kernel/srs_kernel_file.o ../../objs/src/kernel/srs_kernel_consts.o ../../objs/src/rtmp/srs_protocol_amf0.o ../../objs/src/rtmp/srs_protocol_io.o ../../objs/src/rtmp/srs_protocol_stack.o ../../objs/src/rtmp/srs_protocol_rtmp.o ../../objs/src/rtmp/srs_protocol_handshake.o ../../objs/src/rtmp/srs_protocol_utility.o ../../objs/src/rtmp/srs_protocol_msg_array.o ../../objs/src/app/srs_app_server.o ../../objs/src/app/srs_app_conn.o ../../objs/src/app/srs_app_rtmp_conn.o ../../objs/src/app/srs_app_st_socket.o ../../objs/src/app/srs_app_source.o ../../objs/src/app/srs_app_refer.o ../../objs/src/app/srs_app_hls.o ../../objs/src/app/srs_app_forward.o ../../objs/src/app/srs_app_encoder.o ../../objs/src/app/srs_app_http.o ../../objs/src/app/srs_app_thread.o ../../objs/src/app/srs_app_bandwidth.o ../../objs/src/app/srs_app_st.o ../../objs/src/app/srs_app_log.o ../../objs/src/app/srs_app_config.o ../../objs/src/app/srs_app_pithy_print.o ../../objs/src/app/srs_app_reload.o ../../objs/src/app/srs_app_http_api.o ../../objs/src/app/srs_app_http_conn.o ../../objs/src/app/srs_app_http_hooks.o ../../objs/src/app/srs_app_json.o ../../objs/src/app/srs_app_ingest.o ../../objs/src/app/srs_app_ffmpeg.o ../../objs/src/app/srs_app_utility.o ../../objs/src/app/srs_app_dvr.o ../../objs/src/app/srs_app_edge.o ../../objs/src/app/srs_app_kbps.o ../../objs/src/app/srs_app_heartbeat.o ../../objs/src/app/srs_app_empty.o ../../objs/src/app/srs_app_http_client.o ../../objs/src/app/srs_app_avc_aac.o 

# Depends, utest header files
UTEST_DEPS =  ../../src/utest/srs_utest.hpp ../../src/utest/srs_utest_amf0.hpp ../../src/utest/srs_utest_protocol.hpp ../../src/utest/srs_utest_kernel.hpp ../../src/utest/srs_utest_core.hpp ../../src/utest/srs_utest_config.hpp ../../src/utest/srs_utest_reload.hpp

# Objects, build each object of utest
srs_utest.o : $(UTEST_DEPS) ../../src/utest/srs_utest.cpp $(SRS_UTEST_DEPS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(SRS_UTEST_INC) -c ../../src/utest/srs_utest.cpp -o $@
srs_utest_amf0.o : $(UTEST_DEPS) ../../src/utest/srs_utest_amf0.cpp $(SRS_UTEST_DEPS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(SRS_UTEST_INC) -c ../../src/utest/srs_utest_amf0.cpp -o $@
srs_utest_protocol.o : $(UTEST_DEPS) ../../src/utest/srs_utest_protocol.cpp $(SRS_UTEST_DEPS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(SRS_UTEST_INC) -c ../../src/utest/srs_utest_protocol.cpp -o $@
srs_utest_kernel.o : $(UTEST_DEPS) ../../src/utest/srs_utest_kernel.cpp $(SRS_UTEST_DEPS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(SRS_UTEST_INC) -c ../../src/utest/srs_utest_kernel.cpp -o $@
srs_utest_core.o : $(UTEST_DEPS) ../../src/utest/srs_utest_core.cpp $(SRS_UTEST_DEPS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(SRS_UTEST_INC) -c ../../src/utest/srs_utest_core.cpp -o $@
srs_utest_config.o : $(UTEST_DEPS) ../../src/utest/srs_utest_config.cpp $(SRS_UTEST_DEPS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(SRS_UTEST_INC) -c ../../src/utest/srs_utest_config.cpp -o $@
srs_utest_reload.o : $(UTEST_DEPS) ../../src/utest/srs_utest_reload.cpp $(SRS_UTEST_DEPS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(SRS_UTEST_INC) -c ../../src/utest/srs_utest_reload.cpp -o $@

# link all depends libraries
DEPS_LIBRARIES_FILES = ../../objs/st/libst.a ../../objs/hp/libhttp_parser.a ../../objs/openssl/lib/libssl.a ../../objs/openssl/lib/libcrypto.a 

# generate the utest binary
../../objs/srs_utest : $(SRS_UTEST_DEPS)  srs_utest.o srs_utest_amf0.o srs_utest_protocol.o srs_utest_kernel.o srs_utest_core.o srs_utest_config.o srs_utest_reload.o gtest_main.a
	$(CXX) -o $@ $(CPPFLAGS) $(CXXFLAGS) $^ $(DEPS_LIBRARIES_FILES) -lpthread -ldl -static
